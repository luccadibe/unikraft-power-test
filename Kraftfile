spec: v0.6

name: sqlite

rootfs: ./rootfs

cmd:
  [
    "/TPC-H.db",
    ".timer 'on'",
    ".read 'query1.sql'",
    ".read 'query2.sql'",
    ".read 'query3.sql'",
    ".read 'query4.sql'",
    ".read 'query5.sql'",
    ".read 'query6.sql'",
    ".read 'query7.sql'",
    ".read 'query8.sql'",
    ".read 'query9.sql'",
    ".read 'query10.sql'",
    ".read 'query11.sql'",
    ".read 'query12.sql'",
    ".read 'query13.sql'",
    ".read 'query14.sql'",
    ".read 'query15.sql'",
    ".read 'query16.sql'",
    ".read 'query17.sql'",
    ".read 'query18.sql'",
    ".read 'query19.sql'",
    ".read 'query20.sql'",
    ".read 'query21.sql'",
    ".read 'query22.sql'",
  ]

unikraft:
  version: staging
  kconfig:
    # For using embedded initrd you will need to enable
    # Unikraft's VFS subsystem:
    CONFIG_LIBVFSCORE: "y"

    # For any use of einitrd you will need to enable:
    CONFIG_LIBRAMFS: "y"
    CONFIG_LIBCPIO: "y"
    CONFIG_LIBVFSCORE_ROOTFS_EINITRD: "y"

    # To force using the embedded initrd persistently
    # you can set the automount flag:
    CONFIG_LIBVFSCORE_AUTOMOUNT_ROOTFS: "y"

    # Alternatively, for dynamic mounting, wherein you
    # configure mounting options at boot time via
    # kernel command-line arguments:
    CONFIG_LIBVFSCORE_FSTAB: "y"

    # If you've set `rootfs` to a directory or a Dockerfile,
    # this will be the default location of its output.
    CONFIG_LIBVFSCORE_ROOTFS_EINITRD_PATH: .unikraft/build/initramfs.cpio

targets:
  - qemu/x86_64
  - qemu/arm64
  - fc/x86_64
  - fc/arm64

libraries:
  musl: stable
  sqlite:
    version: stable
    kconfig:
      CONFIG_LIBSQLITE_MAIN_FUNCTION: "y"
